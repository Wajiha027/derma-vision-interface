
import { useState, useEffect } from "react";
import { Link, useParams } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { Check } from "lucide-react";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import ResultVisualization from "@/components/ResultVisualization";
import { mockAcneData, MockImageData } from "@/data/mockAcneData";

const ResultsPage = () => {
  const { resultId } = useParams<{ resultId: string }>();
  const [result, setResult] = useState<MockImageData | null>(null);
  const [isLoading, setIsLoading] = useState(true);
  
  useEffect(() => {
    setIsLoading(true);
    
    // Simulate API call with our mock data
    setTimeout(() => {
      if (resultId && mockAcneData[resultId]) {
        setResult(mockAcneData[resultId]);
      } else {
        // If resultId doesn't exist in our mock data, use the demo data
        setResult(mockAcneData["demo"]);
      }
      setIsLoading(false);
    }, 1500);
  }, [resultId]);
  
  const formatDate = () => {
    const date = new Date();
    return new Intl.DateTimeFormat('en-US', { 
      month: 'short', 
      day: 'numeric', 
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    }).format(date);
  };
  
  return (
    <div className="min-h-screen flex flex-col">
      <Header />
      
      <main className="flex-grow bg-gray-50">
        <div className="page-container py-8">
          <div className="mb-6">
            <div className="flex flex-wrap justify-between items-center gap-4">
              <div>
                <h1 className="text-2xl font-bold text-gray-800">Skin Analysis Results</h1>
                {!isLoading && result && (
                  <p className="text-gray-600">Analysis completed on {formatDate()}</p>
                )}
              </div>
              
              <div className="flex gap-3">
                <Link to="/upload">
                  <Button variant="outline">New Analysis</Button>
                </Link>
                <Link to="/dashboard">
                  <Button>Back to Dashboard</Button>
                </Link>
              </div>
            </div>
          </div>
          
          {isLoading ? (
            <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-12">
              <div className="flex flex-col items-center justify-center">
                <div className="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-primary-500"></div>
                <p className="mt-4 text-gray-600">Loading analysis results...</p>
              </div>
            </div>
          ) : result ? (
            <>
              {result.hasAcne ? (
                <ResultVisualization 
                  imageUrl="/placeholder.svg" // Replace with actual image URL in a real app
                  detections={result.detections}
                  severity={result.severity || "mild"}
                  severityGrade={result.severityGrade}
                />
              ) : (
                <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-8">
                  <div className="flex flex-col items-center justify-center text-center max-w-lg mx-auto">
                    <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-6">
                      <Check className="h-8 w-8 text-green-600" />
                    </div>
                    <h2 className="text-2xl font-bold text-gray-800 mb-4">No Acne Detected</h2>
                    <p className="text-gray-600 mb-6">
                      Our analysis didn't detect any significant acne on your skin. Keep up your good skincare routine!
                    </p>
                    
                    <Alert className="mb-6 bg-blue-50 border-blue-100">
                      <AlertDescription>
                        Even with clear skin, it's important to maintain a consistent skincare routine, stay hydrated, and protect your skin from the sun.
                      </AlertDescription>
                    </Alert>
                    
                    <Link to="/upload">
                      <Button>Analyze Another Image</Button>
                    </Link>
                  </div>
                </div>
              )}
              
              <div className="mt-6 text-center text-sm text-gray-500 italic">
                Disclaimer: This analysis is generated by AI and should not replace professional medical advice.
              </div>
            </>
          ) : (
            <div className="bg-white rounded-xl shadow-sm border border-gray-100 p-12 text-center">
              <p className="text-gray-600">Result not found or has been deleted.</p>
              <Link to="/upload" className="mt-4 inline-block">
                <Button>Start New Analysis</Button>
              </Link>
            </div>
          )}
        </div>
      </main>
      
      <Footer />
    </div>
  );
};

export default ResultsPage;
